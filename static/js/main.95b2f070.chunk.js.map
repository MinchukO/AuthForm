{"version":3,"sources":["useForm.js","validateInfo.js","FormSignUp.js","Success.js","Form.js","App.js","index.js"],"names":["useForm","callback","validate","useState","email","password","remember","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","event","target","name","value","type","checked","handleSubmit","preventDefault","validateInfo","test","FormSignUp","submitForm","className","href","onSubmit","classNames","error","success","placeholder","autoComplete","onChange","Success","Form","isSubmitted","setIsSubmitted","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95b2f070.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    remember: false,\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = (event) => {\n    const { name, value, type, checked } = event.target;\n    setValues({\n      ...values,\n      [name]: type === \"checkbox\" ? checked : value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  return { handleChange, values, handleSubmit, errors };\n};\n\nexport default useForm;","export default function validateInfo(values) {\n  let errors = {};\n\n  if (!values.email) {\n    errors.email = 'Email required';\n  } else if (!/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/i.test(values.email)) {\n    errors.email = `Error message`;\n  }\n\n  if (!values.password) {\n    errors.password = \"Password required\";\n  } else if (values.password.length < 6 || !/[0-9]/.test(values.password) || !/[a-zA-Z]/.test(values.password)) {\n    errors.password = \"Error message\";\n  }\n\n  return errors;\n}\n","import React from \"react\";\nimport classNames from 'classnames';\n\nimport useForm from './useForm';\nimport validate from \"./validateInfo\";\n\n\nconst FormSignUp = ({submitForm}) => {\n  const { handleChange, values, handleSubmit, errors } = useForm(\n    submitForm, validate\n  );\n\n  return (\n    <div>\n      <div className=\"wrapperForm\">\n        <h2 className=\"wrapperForm__title\">Log in</h2>\n        <p className=\"wrapperForm__sub-title\">\n          <span className=\"wrapperForm-text\">Don‚Äôt have an account?</span>\n          &nbsp;\n          <a className=\"wrapperForm-link\" href=\"/\">\n            Sign up\n          </a>\n        </p>\n        <form className=\"form\" onSubmit={handleSubmit}>\n          <button className=\"button form-btn form-btn-google\" type=\"button\">\n            Continue with Google\n          </button>\n          <button className=\"button form-btn form-btn-microsoft\" type=\"button\">\n            Continue with Microsoft\n          </button>\n          <p className=\"form__separator\">or</p>\n          <input\n            className={classNames(\"form-input form-input--email\", {\n              error: errors.email,\n              success: !errors.email,\n            })}\n            type=\"email\"\n            placeholder=\"Email\"\n            autoComplete=\"off\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleChange}\n          />\n          {errors.email && <p className=\"form__error-info\">{errors.email}</p>}\n          <input\n            className={classNames(\"form-input form-input--password\", {\n              error: errors.password,\n              success: !errors.password,\n            })}\n            type=\"password\"\n            placeholder=\"Password\"\n            autoComplete=\"off\"\n            name=\"password\"\n            value={values.password}\n            onChange={handleChange}\n          />\n          {errors.password && (\n            <p className=\"form__error-info\">{errors.password}</p>\n          )}\n          <a className=\"form-link\" href=\"/\">\n            Forgot password?\n          </a>\n          <label className=\"form-text\">\n            Remember me\n            <input\n              className=\"form-remember\"\n              type=\"checkbox\"\n              name=\"remember\"\n              checked={values.remember}\n              onChange={handleChange}\n            />\n            <span className=\"checkmark\"></span>\n          </label>\n          <button className=\"form-submit\" type=\"submit\">\n            Continue\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default FormSignUp\n","import React from 'react'\n\nconst Success = () => {\n  return (\n    <div className=\"successInfo\">\n      <h2>Good job!!!üëç</h2>\n    </div>\n  )\n}\n\nexport default Success\n","import React, {useState} from 'react'\nimport FormSignUp from './FormSignUp'\nimport Success from './Success';\n\nconst Form = () => {\n  const [isSubmitted, setIsSubmitted] = useState(false)\n\n  function submitForm() {\n    setIsSubmitted(true)\n  }\n\n  return (\n    <div>\n      {!isSubmitted ?\n      <FormSignUp submitForm={submitForm} /> :\n      <Success />\n      }\n    </div>\n  )\n}\n\nexport default Form\n","import './App.scss';\nimport Form from './Form';\n\nfunction App() {\n  return (\n   <Form />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}